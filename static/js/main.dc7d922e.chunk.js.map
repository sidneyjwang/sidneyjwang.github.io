{"version":3,"sources":["components/Header.js","components/Footer.js","components/Quotes.js","components/AirportInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","Quotes","dict","dict2","carrierDict","i","places","length","PlaceId","Name","IataCode","airports","CarrierId","currency","quotes","map","id","QuoteId","MinPrice","OutboundLeg","CarrierIds","OriginId","DestinationId","AirportInfo","useState","setQuotes","setPlaces","setAirports","dates","setDates","setCurrency","inputQuery","setInputQuery","destQuery","setDestQuery","goQuery","setGoQuery","leaveQuery","setLeaveQuery","currencyQuery","setCurrencyQuery","showQuotes","setShowQuotes","onSubmit","e","a","reqOptions","method","headers","fetch","URLSearchParams","query","originInput","json","originResponse","Places","destinationInput","destinationResponse","returnDate","response","Carriers","Dates","preventDefault","fetchMyAPI","htmlFor","value","onChange","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc7d922e.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) { \n    return(\n        <div className=\"header\">\n            {props.title}\n         </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(props) { \n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './Quotes.css';\n\nfunction Quotes(props) { \n    var dict = {};\n    var dict2 = {};\n    var carrierDict = {};\n    for (var i = 0; i < props.places.length; i++) {\n        dict[props.places[i].PlaceId] = props.places[i].Name\n        dict2[props.places[i].PlaceId] = props.places[i].IataCode\n    }\n    for (var i = 0; i < props.airports.length; i++) {\n        carrierDict[props.airports[i].CarrierId] = props.airports[i].Name\n    }\n    return(\n        <div className=\"quotes\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Option #</th>\n                        <th>{\"Lowest Price (\" + props.currency + \")\"}</th>\n                        <th>Carrier Name</th>\n                        <th>Origin</th>\n                        <th>Destination</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.quotes.map(quotes => {\n                        return (<tr id={quotes.QuoteId}>\n                            <th>{quotes.QuoteId}</th>\n                            <th>{quotes.MinPrice}</th>\n                            <th>{carrierDict[quotes.OutboundLeg.CarrierIds]}</th>\n                            <th>{dict[quotes.OutboundLeg.OriginId] + \" (\" + dict2[quotes.OutboundLeg.OriginId] + \")\"}</th>\n                            <th>{dict[quotes.OutboundLeg.DestinationId] + \" (\" + dict2[quotes.OutboundLeg.DestinationId] + \")\"}</th>\n                        </tr>);\n                    })}\n                </tbody>\n            </table>\n         </div>\n    )\n}\n\nexport default Quotes;","import React, { useState } from 'react';\nimport './AirportInfo.css';\nimport Quotes from './Quotes';\n\nfunction AirportInfo() { \n    const [quotes,setQuotes] = useState([])\n    const [places, setPlaces] = useState([])\n    const [airports, setAirports] = useState([])\n    const [dates, setDates] = useState([])\n    const [currency, setCurrency] = useState([])\n    const [inputQuery,setInputQuery] = useState(\"\")\n    const [destQuery, setDestQuery] = useState(\"\")\n    const [goQuery, setGoQuery] = useState(\"\")\n    const [leaveQuery, setLeaveQuery] = useState(\"\")\n    const [currencyQuery, setCurrencyQuery] = useState(\"\")\n    const [showQuotes,setShowQuotes] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": \"d5df66e262msh0ee4ae21cf5eab8p14a4dcjsn5895e2e3c26f\",\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n            let originInput = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/\" + currencyQuery + \"/en-US/?\" + new URLSearchParams({query: inputQuery}), reqOptions)\n            originInput = await originInput.json()\n            let originResponse = originInput.Places[0].PlaceId\n            let destinationInput = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/\" + currencyQuery + \"/en-US/?\" + new URLSearchParams({query: destQuery}), reqOptions)\n            destinationInput = await destinationInput.json()\n            let destinationResponse = destinationInput.Places[0].PlaceId\n            let returnDate = \"\"\n            if (leaveQuery !== \"\") returnDate = \"?inboundpartialdate=\" + leaveQuery\n            let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/\" + currencyQuery + \"/en-US/\" + originResponse + \"/\" + destinationResponse + \"/\" + goQuery + returnDate, reqOptions)\n            response = await response.json()\n            setQuotes(response.Quotes)\n            setPlaces(response.Places)\n            setAirports(response.Carriers)\n            setDates(response.Dates)\n            setCurrency(currencyQuery)\n        }\n        fetchMyAPI()\n        setShowQuotes(true)\n    }\n\n    return(\n        <div className=\"airportinfo\">\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"originInput\">City of Origin Code:</label>\n                <input id=\"originInput\" value={inputQuery} onChange={e => setInputQuery(e.target.value)} required/>\n                <label htmlFor=\"destinationInput\">City Destination Code:</label>\n                <input id=\"destinationInput\" value={destQuery} onChange={e => setDestQuery(e.target.value)} required/>\n                <label htmlFor=\"goDate\">Leaving date (yyyy-mm-dd or yyyy-mm):</label>\n                <input id=\"goDate\" value = {goQuery} onChange={e => setGoQuery(e.target.value)} required/>\n                <label htmlFor=\"leaveDate\">Return date: (blank for one-way)</label>\n                <input id=\"leaveDate\" value = {leaveQuery} onChange={e => setLeaveQuery(e.target.value)}/>\n                <label htmlFor=\"currency\">Currency Code:</label>\n                <input id=\"currency\" value = {currencyQuery} onChange={e => setCurrencyQuery(e.target.value)} required/>\n                <button className=\"search\">Submit</button>\n           </form>\n           { showQuotes ? <Quotes quotes={quotes} places={places} airports={airports} dates={dates} currency={currency}></Quotes>: <></>}\n        </div>\n    )\n}\nexport default AirportInfo;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport AirportInfo from './components/AirportInfo';\n// import FlightInfo from './components/FlightInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Airport Info\"></Header>\n      <AirportInfo></AirportInfo>\n      <Footer title=\"2021\"></Footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}